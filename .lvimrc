if has('python')
    command! -nargs=1 Pyf pyf <args>
elseif has('python3')
    command! -nargs=1 Pyf py3f <args>
endif

function! ClangFormat()
    Pyf /usr/share/clang/clang-format.py
endfunction

function! ClangFormatFile()
    let l:lines="all"
    Pyf /usr/share/clang/clang-format.py
endfunction

vnoremap <buffer> <leader>cf :call ClangFormat()<cr>
nnoremap <buffer> <leader>cf :call ClangFormatFile()<cr>

set path+=include

au! BufEnter *.cpp let b:fswitchdst = 'h'
au! BufEnter *.h let b:fswitchdst = 'cpp'

function! BuildFileCommand()
    let l:target=expand('%:r:s?^src/?build/?') . '.o'
    return 'make ' . l:target
endfunction

nnoremap <Leader>b :wa<CR>:execute BuildFileCommand()<CR>
nnoremap <Leader>\ :wa<CR>:make unittest<CR>

function! RunCurrentIntegrationTest(diff)
    let b:winview = winsaveview()
    silent call system("RTS_TEST_RUN_ONLY=". expand('%') . " build/test/tests Integration")
    if v:shell_error == 0
        echom "Test passed."
    elseif v:shell_error != 1
        echom "Test failed with status code: " . v:shell_error
    else
        if a:diff
            silent let l:result = systemlist("util/test-diff.sh " . expand('%') . " .test.out || true")
        else
            let l:result = readfile('.test.out')
        endif
        %delete _
        call setline(1, l:result)
        call winrestview(b:winview)
    endif
endfunction

nnoremap <Leader>r :w<CR>:call RunCurrentIntegrationTest(0)<CR>
nnoremap <Leader>R :w<CR>:call RunCurrentIntegrationTest(1)<CR>
